[{"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\index.js":"1","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\App.js":"2","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\RenderCard.js":"4","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\RenderQuote.js":"5","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\MiniDrawer.js":"6","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\Form.js":"7","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\RenderForm.js":"8","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\Controls.js":"9","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\Input.js":"10","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\Checkbox.js":"11","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\DatePicker.js":"12","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\ProductCarousel.js":"13","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\CountrySelect.js":"14","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\Asynchronous.js":"15","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\geolocation\\useGeoLocation.js":"16","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\Suggestion.js":"17","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\AboutUs.js":"18"},{"size":311,"mtime":1611823213857,"results":"19","hashOfConfig":"20"},{"size":1227,"mtime":1611846422960,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1610070274000,"results":"22","hashOfConfig":"20"},{"size":3722,"mtime":1611845849524,"results":"23","hashOfConfig":"20"},{"size":6828,"mtime":1611846234530,"results":"24","hashOfConfig":"20"},{"size":5848,"mtime":1611823798694,"results":"25","hashOfConfig":"20"},{"size":1590,"mtime":1611846348470,"results":"26","hashOfConfig":"20"},{"size":6815,"mtime":1611837894130,"results":"27","hashOfConfig":"20"},{"size":323,"mtime":1610306059279,"results":"28","hashOfConfig":"20"},{"size":673,"mtime":1610372242151,"results":"29","hashOfConfig":"20"},{"size":755,"mtime":1610209525524,"results":"30","hashOfConfig":"20"},{"size":1025,"mtime":1611836648362,"results":"31","hashOfConfig":"20"},{"size":1818,"mtime":1611823620324,"results":"32","hashOfConfig":"20"},{"size":15459,"mtime":1610338818293,"results":"33","hashOfConfig":"20"},{"size":2184,"mtime":1610306430689,"results":"34","hashOfConfig":"20"},{"size":985,"mtime":1611820513641,"results":"35","hashOfConfig":"20"},{"size":4251,"mtime":1611846269088,"results":"36","hashOfConfig":"20"},{"size":272,"mtime":1611824166822,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"a4lc17",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\index.js",[],["80","81"],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\App.js",["82"],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\RenderCard.js",[],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\RenderQuote.js",[],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\MiniDrawer.js",[],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\Form.js",[],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\RenderForm.js",["83","84","85"],"import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Container, TextField, Typography } from \"@material-ui/core\";\nimport \"../RenderForm.css\";\nimport {\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Switch,\n} from \"@material-ui/core\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport Controls from \"../components/formControls/Controls/Controls\";\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    color: \"#b58500\",\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: \"gold\",\n  },\n}));\n\nfunction RenderForm({ formFields, onSubmit }) {\n  var validations;\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n  const [selectedStartDate, handleStartDateChange] = useState(new Date());\n  const [selectedEndDate, handleEndDateChange] = useState(new Date());\n  const handlePattern = (validation) => {\n    let tempValidation = validation;\n    tempValidation[\"pattern\"][\"value\"] = new RegExp(validation.pattern.value);\n    validations = tempValidation;\n  };\n\n  const handleValidations = (validation) => {\n    validations = validation;\n  };\n\n  const renderFields = (fields) => {\n    return fields.map((field) => {\n      const { name, type, label, placeholder, validation } = field;\n      {\n        validation.hasOwnProperty(\"pattern\")\n          ? handlePattern(validation)\n          : handleValidations(validation);\n      }\n\n      switch (type) {\n        case \"text\":\n        case \"email\":\n        case \"tel\":\n        case \"number\":\n          return (\n            <div key={name}>\n              <TextField\n                id={name}\n                name={name}\n                type={type}\n                label={label}\n                placeholder={placeholder}\n                inputRef={register(validations)}\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n              />\n              {errors[name] && (\n                <span style={{ color: \"red\" }}>* {errors[name].message}</span>\n              )}\n            </div>\n          );\n\n        case \"startdate\":\n          return (\n            <div key={name}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  id={name}\n                  name={name}\n                  label={label}\n                  value={selectedStartDate}\n                  placeholder={placeholder}\n                  variant=\"outlined\"\n                  format=\"MM/dd/yyyy\"\n                  margin=\"normal\"\n                  onChange={(date) => handleStartDateChange(date)}\n                  minDate={new Date()}\n                  InputLabelProps={{ shrink: true }}\n                  inputRef={register(validations)}\n                  fullWidth\n                />\n              </MuiPickersUtilsProvider>\n              {errors[name] && (\n                <span style={{ color: \"red\" }}>* {errors[name].message}</span>\n              )}\n            </div>\n          );\n\n        case \"enddate\":\n          return (\n            <div key={name}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  id={name}\n                  name={name}\n                  label={label}\n                  value={selectedEndDate}\n                  placeholder={placeholder}\n                  variant=\"outlined\"\n                  format=\"MM/dd/yyyy\"\n                  margin=\"normal\"\n                  minDate={selectedStartDate}\n                  onChange={(date) => handleEndDateChange(date)}\n                  InputLabelProps={{ shrink: true }}\n                  inputRef={register(validations)}\n                  fullWidth\n                />\n              </MuiPickersUtilsProvider>\n\n              {errors[name] && (\n                <span style={{ color: \"red\" }}>* {errors[name].message}</span>\n              )}\n            </div>\n          );\n\n        case \"select\":\n          return (\n            <div key={name}>\n              <select id={name} name={name} inputRef={register(validations)}>\n                <option value=\"\">Select Destination..</option>\n                <option value=\"India\">India</option>\n                <option value=\"England\">England</option>\n                <option value=\"Australia\">Australia</option>\n                <option value=\"USA\">USA</option>\n              </select>\n              {errors[name]  && (\n                <span style={{ color: \"red\" }}>* {errors[name].message}</span>\n              )}\n              {/* <Controls.CountrySelect /> */}\n              {/* <Controls.Asynchronous name={name} ref={register}/> */}\n            </div>\n          );\n\n        case \"radio\":\n          return (\n            <div key={name}>\n              <FormControl component=\"fieldset\" required>\n                <FormLabel component=\"legend\">{label}</FormLabel>\n                <RadioGroup row name={name}>\n                  {field.items.map((item) => {\n                    return (\n                      <FormControlLabel\n                        key={item.value}\n                        value={item.value}\n                        control={<Radio inputRef={register(validations)} />}\n                        label={item.label}\n                        labelPlacement=\"end\"\n                      />\n                    );\n                  })}\n                </RadioGroup>\n              </FormControl>\n            </div>\n          );\n\n        default:\n          return (\n            <div key={name}>\n              <span style={{ color: \"red\" }}>Invalid Field</span>\n            </div>\n          );\n      }\n    });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" className=\"renderForm\">\n      <div className={classes.paper}>\n        <Typography variant=\"subtitle1\">\n          Provide the following details\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          {renderFields(formFields)}\n          <FormControlLabel\n            control={<Switch name=\"sendUpdates\" inputRef={register} />}\n            label=\"Get updates on Email\"\n          />\n          <Button\n            className=\"button\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            style={{ borderRadius: \"15px\" }}\n          >\n            Submit\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default RenderForm;\n","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\Controls.js",[],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\Input.js",["86","87","88","89"],"import React from 'react'\r\nimport { TextField } from '@material-ui/core';\r\n\r\nfunction Input({ name, label, placeholder, id, type, ...rest}, inputRef ) {\r\n\r\n    //const { name, label, placeholder, id, type }, inputRef = props;\r\n    return (\r\n        <TextField\r\n            variant=\"outlined\"\r\n            id={name} name={name} type={type} label={label} placeholder={placeholder}\r\n            label={label}\r\n            name={name}\r\n            //value={value}\r\n            inputRef={inputRef}\r\n            type={type}\r\n            margin=\"normal\" required fullWidth\r\n        />\r\n        \r\n    )\r\n    \r\n}\r\nconst forwardedInput = React.forwardRef(Input)\r\nexport default Input","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\Checkbox.js",[],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\DatePicker.js",["90","91","92","93","94"],"import DateFnsUtils from '@date-io/date-fns';\r\nimport 'date-fns';\r\nimport React from 'react';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n//import MomentUtils from '@date-io/moment';\r\nexport default function DatePicker(props) {\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n    const { name, label, placeholder, id, type } = props;\r\n    return (<MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"MM/dd/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label={label}\r\n          \r\n           value={selectedDate}\r\n           onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\ProductCarousel.js",[],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\CountrySelect.js",[],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\Asynchronous.js",["95","96","97","98"],"// *https://www.registers.service.gov.uk/registers/country/use-the-api*\r\nimport fetch from 'cross-fetch';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nexport default function Asynchronous(props) {\r\n  const { name, label, placeholder, id, type } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const loading = open && options.length === 0;\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      const response = await fetch('https://country.register.gov.uk/records.json?page-size=5000');\r\n      await sleep(1e3); // For demo purposes.\r\n      const countries = await response.json();\r\n\r\n      if (active) {\r\n        setOptions(Object.keys(countries).map((key) => countries[key].item[0]));\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setOptions([]);\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"asynchronous-demo\"\r\n      style={{ width: 300 }}\r\n      open={open}\r\n      onOpen={() => {\r\n        setOpen(true);\r\n      }}\r\n      onClose={() => {\r\n        setOpen(false);\r\n      }}\r\n      getOptionSelected={(option, value) => option.name === value.name}\r\n      getOptionLabel={(option) => option.name}\r\n      options={options}\r\n      loading={loading}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label={name}\r\n          variant=\"outlined\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\geolocation\\useGeoLocation.js",[],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\Suggestion.js",["99","100","101","102","103","104","105","106","107","108","109"],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\AboutUs.js",["110"],"import React from \"react\";\r\n\r\nfunction AboutUs() {\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>About Us</h1>\r\n      <marquee width=\"60%\" direction=\"left\" height=\"100px\">Prateek Param Rashwin</marquee>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutUs;\r\n",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":18,"column":40,"nodeType":"117","endLine":18,"endColumn":45},{"ruleId":"118","severity":1,"message":"119","line":20,"column":8,"nodeType":"120","messageId":"121","endLine":20,"endColumn":16},{"ruleId":"122","severity":1,"message":"123","line":57,"column":7,"nodeType":"124","messageId":"125","endLine":61,"endColumn":8},{"ruleId":"115","severity":1,"message":"116","line":208,"column":13,"nodeType":"117","endLine":208,"endColumn":39},{"ruleId":"115","severity":1,"message":"116","line":11,"column":13,"nodeType":"117","endLine":11,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":12,"column":13,"nodeType":"117","endLine":12,"endColumn":24},{"ruleId":"115","severity":1,"message":"116","line":15,"column":13,"nodeType":"117","endLine":15,"endColumn":24},{"ruleId":"118","severity":1,"message":"126","line":22,"column":7,"nodeType":"120","messageId":"121","endLine":22,"endColumn":21},{"ruleId":"118","severity":1,"message":"127","line":6,"column":3,"nodeType":"120","messageId":"121","endLine":6,"endColumn":21},{"ruleId":"118","severity":1,"message":"128","line":17,"column":13,"nodeType":"120","messageId":"121","endLine":17,"endColumn":17},{"ruleId":"118","severity":1,"message":"129","line":17,"column":26,"nodeType":"120","messageId":"121","endLine":17,"endColumn":37},{"ruleId":"118","severity":1,"message":"130","line":17,"column":39,"nodeType":"120","messageId":"121","endLine":17,"endColumn":41},{"ruleId":"118","severity":1,"message":"131","line":17,"column":43,"nodeType":"120","messageId":"121","endLine":17,"endColumn":47},{"ruleId":"118","severity":1,"message":"132","line":15,"column":17,"nodeType":"120","messageId":"121","endLine":15,"endColumn":22},{"ruleId":"118","severity":1,"message":"129","line":15,"column":24,"nodeType":"120","messageId":"121","endLine":15,"endColumn":35},{"ruleId":"118","severity":1,"message":"130","line":15,"column":37,"nodeType":"120","messageId":"121","endLine":15,"endColumn":39},{"ruleId":"118","severity":1,"message":"131","line":15,"column":41,"nodeType":"120","messageId":"121","endLine":15,"endColumn":45},{"ruleId":"118","severity":1,"message":"133","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":16},{"ruleId":"118","severity":1,"message":"134","line":2,"column":40,"nodeType":"120","messageId":"121","endLine":2,"endColumn":51},{"ruleId":"118","severity":1,"message":"135","line":2,"column":66,"nodeType":"120","messageId":"121","endLine":2,"endColumn":75},{"ruleId":"118","severity":1,"message":"136","line":2,"column":77,"nodeType":"120","messageId":"121","endLine":2,"endColumn":83},{"ruleId":"118","severity":1,"message":"137","line":2,"column":85,"nodeType":"120","messageId":"121","endLine":2,"endColumn":98},{"ruleId":"118","severity":1,"message":"138","line":2,"column":100,"nodeType":"120","messageId":"121","endLine":2,"endColumn":111},{"ruleId":"118","severity":1,"message":"139","line":2,"column":113,"nodeType":"120","messageId":"121","endLine":2,"endColumn":120},{"ruleId":"140","severity":1,"message":"141","line":15,"column":10,"nodeType":"142","endLine":15,"endColumn":109},{"ruleId":"118","severity":1,"message":"143","line":51,"column":12,"nodeType":"120","messageId":"121","endLine":51,"endColumn":20},{"ruleId":"118","severity":1,"message":"144","line":56,"column":12,"nodeType":"120","messageId":"121","endLine":56,"endColumn":16},{"ruleId":"118","severity":1,"message":"145","line":69,"column":11,"nodeType":"120","messageId":"121","endLine":69,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":7,"column":7,"nodeType":"142","endLine":7,"endColumn":60},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'Controls' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'forwardedInput' is assigned a value but never used.","'KeyboardTimePicker' is defined but never used.","'name' is assigned a value but never used.","'placeholder' is assigned a value but never used.","'id' is assigned a value but never used.","'type' is assigned a value but never used.","'label' is assigned a value but never used.","'Button' is defined but never used.","'CardActions' is defined but never used.","'CardMedia' is defined but never used.","'Dialog' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'Divider' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'cardInfo' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","no-global-assign","no-unsafe-negation"]